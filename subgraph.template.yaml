specVersion: 0.0.2
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: BTCGateway
    network: {{network}}
    source:
      address: "{{btcGateway}}"
      abi: Gateway
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - LogMint
        - LogBurn
        - Integrator
        - RenVM
        - DayData
      abis:
        - name: Gateway
          file: ./abis/Gateway.json
      callHandlers:
        - function: mint(bytes32,uint256,bytes32,bytes)
          handler: handleMint
        - function: burn(bytes,uint256)
          handler: handleBurn
      file: ./src/btcGateway.ts
  - kind: ethereum/contract
    name: ZECGateway
    network: {{network}}
    source:
      address: "{{zecGateway}}"
      abi: Gateway
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - LogMint
        - LogBurn
        - Integrator
        - RenVM
        - DayData
      abis:
        - name: Gateway
          file: ./abis/Gateway.json
      callHandlers:
        - function: mint(bytes32,uint256,bytes32,bytes)
          handler: handleMint
        - function: burn(bytes,uint256)
          handler: handleBurn
      file: ./src/zecGateway.ts
  - kind: ethereum/contract
    name: BCHGateway
    network: {{network}}
    source:
      address: "{{bchGateway}}"
      abi: Gateway
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - LogMint
        - LogBurn
        - Integrator
        - RenVM
        - DayData
      abis:
        - name: Gateway
          file: ./abis/Gateway.json
      callHandlers:
        - function: mint(bytes32,uint256,bytes32,bytes)
          handler: handleMint
        - function: burn(bytes,uint256)
          handler: handleBurn
      file: ./src/bchGateway.ts
  - kind: ethereum/contract
    name: DarknodeRegistry
    network: {{network}}
    source:
      address: "{{darknodeRegistry}}"
      abi: DarknodeRegistry
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - LogDarknodeRegistered
        - LogDarknodeDeregistered
        - LogNewEpoch
      abis:
        - name: DarknodeRegistry
          file: ./abis/DarknodeRegistry.json
        - name: DarknodePayment
          file: ./abis/DarknodePayment.json
        - name: Gateway
          file: ./abis/Gateway.json
      eventHandlers:
        - event: LogDarknodeRegistered(indexed address,indexed address,uint256)
          handler: handleLogDarknodeRegistered
        - event: LogDarknodeDeregistered(indexed address,indexed address)
          handler: handleLogDarknodeDeregistered
        - event: LogNewEpoch(indexed uint256)
          handler: handleLogNewEpoch
      file: ./src/darknodeRegistry.ts
  - kind: ethereum/contract
    name: DarknodePayment
    network: {{network}}
    source:
      address: "{{darknodePayment}}"
      abi: DarknodePayment
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - LogDarknodeWithdrew
      abis:
        - name: DarknodePayment
          file: ./abis/DarknodePayment.json
      eventHandlers:
        - event: LogDarknodeWithdrew(indexed address,indexed address,indexed address,uint256)
          handler: handleLogDarknodeWithdrew
      file: ./src/darknodePayment.ts