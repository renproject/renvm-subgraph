// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt,
  CallResult
} from "@graphprotocol/graph-ts";

export class LogShiftIn extends EthereumEvent {
  get params(): LogShiftIn__Params {
    return new LogShiftIn__Params(this);
  }
}

export class LogShiftIn__Params {
  _event: LogShiftIn;

  constructor(event: LogShiftIn) {
    this._event = event;
  }

  get _to(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _shiftID(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _signedMessageHash(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }
}

export class LogShiftOut extends EthereumEvent {
  get params(): LogShiftOut__Params {
    return new LogShiftOut__Params(this);
  }
}

export class LogShiftOut__Params {
  _event: LogShiftOut;

  constructor(event: LogShiftOut) {
    this._event = event;
  }

  get _to(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get _amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _shiftID(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _indexedTo(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }
}

export class OwnershipTransferred extends EthereumEvent {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BCHShifter extends SmartContract {
  static bind(address: Address): BCHShifter {
    return new BCHShifter("BCHShifter", address);
  }

  feeRecipient(): Address {
    let result = super.call("feeRecipient", []);

    return result[0].toAddress();
  }

  try_feeRecipient(): CallResult<Address> {
    let result = super.tryCall("feeRecipient", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  hashForSignature(
    _pHash: Bytes,
    _amount: BigInt,
    _to: Address,
    _nHash: Bytes
  ): Bytes {
    let result = super.call("hashForSignature", [
      EthereumValue.fromFixedBytes(_pHash),
      EthereumValue.fromUnsignedBigInt(_amount),
      EthereumValue.fromAddress(_to),
      EthereumValue.fromFixedBytes(_nHash)
    ]);

    return result[0].toBytes();
  }

  try_hashForSignature(
    _pHash: Bytes,
    _amount: BigInt,
    _to: Address,
    _nHash: Bytes
  ): CallResult<Bytes> {
    let result = super.tryCall("hashForSignature", [
      EthereumValue.fromFixedBytes(_pHash),
      EthereumValue.fromUnsignedBigInt(_amount),
      EthereumValue.fromAddress(_to),
      EthereumValue.fromFixedBytes(_nHash)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBytes());
  }

  isOwner(): boolean {
    let result = super.call("isOwner", []);

    return result[0].toBoolean();
  }

  try_isOwner(): CallResult<boolean> {
    let result = super.tryCall("isOwner", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  minShiftAmount(): BigInt {
    let result = super.call("minShiftAmount", []);

    return result[0].toBigInt();
  }

  try_minShiftAmount(): CallResult<BigInt> {
    let result = super.tryCall("minShiftAmount", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  mintAuthority(): Address {
    let result = super.call("mintAuthority", []);

    return result[0].toAddress();
  }

  try_mintAuthority(): CallResult<Address> {
    let result = super.tryCall("mintAuthority", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  nextShiftID(): BigInt {
    let result = super.call("nextShiftID", []);

    return result[0].toBigInt();
  }

  try_nextShiftID(): CallResult<BigInt> {
    let result = super.tryCall("nextShiftID", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", []);

    return result[0].toAddress();
  }

  try_owner(): CallResult<Address> {
    let result = super.tryCall("owner", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  shiftIn(_pHash: Bytes, _amount: BigInt, _nHash: Bytes, _sig: Bytes): BigInt {
    let result = super.call("shiftIn", [
      EthereumValue.fromFixedBytes(_pHash),
      EthereumValue.fromUnsignedBigInt(_amount),
      EthereumValue.fromFixedBytes(_nHash),
      EthereumValue.fromBytes(_sig)
    ]);

    return result[0].toBigInt();
  }

  try_shiftIn(
    _pHash: Bytes,
    _amount: BigInt,
    _nHash: Bytes,
    _sig: Bytes
  ): CallResult<BigInt> {
    let result = super.tryCall("shiftIn", [
      EthereumValue.fromFixedBytes(_pHash),
      EthereumValue.fromUnsignedBigInt(_amount),
      EthereumValue.fromFixedBytes(_nHash),
      EthereumValue.fromBytes(_sig)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  shiftInFee(): i32 {
    let result = super.call("shiftInFee", []);

    return result[0].toI32();
  }

  try_shiftInFee(): CallResult<i32> {
    let result = super.tryCall("shiftInFee", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toI32());
  }

  shiftOut(_to: Bytes, _amount: BigInt): BigInt {
    let result = super.call("shiftOut", [
      EthereumValue.fromBytes(_to),
      EthereumValue.fromUnsignedBigInt(_amount)
    ]);

    return result[0].toBigInt();
  }

  try_shiftOut(_to: Bytes, _amount: BigInt): CallResult<BigInt> {
    let result = super.tryCall("shiftOut", [
      EthereumValue.fromBytes(_to),
      EthereumValue.fromUnsignedBigInt(_amount)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  shiftOutFee(): i32 {
    let result = super.call("shiftOutFee", []);

    return result[0].toI32();
  }

  try_shiftOutFee(): CallResult<i32> {
    let result = super.tryCall("shiftOutFee", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toI32());
  }

  status(param0: Bytes): boolean {
    let result = super.call("status", [EthereumValue.fromFixedBytes(param0)]);

    return result[0].toBoolean();
  }

  try_status(param0: Bytes): CallResult<boolean> {
    let result = super.tryCall("status", [
      EthereumValue.fromFixedBytes(param0)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  token(): Address {
    let result = super.call("token", []);

    return result[0].toAddress();
  }

  try_token(): CallResult<Address> {
    let result = super.tryCall("token", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  verifySignature(_signedMessageHash: Bytes, _sig: Bytes): boolean {
    let result = super.call("verifySignature", [
      EthereumValue.fromFixedBytes(_signedMessageHash),
      EthereumValue.fromBytes(_sig)
    ]);

    return result[0].toBoolean();
  }

  try_verifySignature(
    _signedMessageHash: Bytes,
    _sig: Bytes
  ): CallResult<boolean> {
    let result = super.tryCall("verifySignature", [
      EthereumValue.fromFixedBytes(_signedMessageHash),
      EthereumValue.fromBytes(_sig)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  version(): i32 {
    let result = super.call("version", []);

    return result[0].toI32();
  }

  try_version(): CallResult<i32> {
    let result = super.tryCall("version", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toI32());
  }
}

export class ConstructorCall extends EthereumCall {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _feeRecipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _mintAuthority(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _shiftInFee(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get _shiftOutFee(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get _minShiftOutAmount(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ClaimOwnershipCall extends EthereumCall {
  get inputs(): ClaimOwnershipCall__Inputs {
    return new ClaimOwnershipCall__Inputs(this);
  }

  get outputs(): ClaimOwnershipCall__Outputs {
    return new ClaimOwnershipCall__Outputs(this);
  }
}

export class ClaimOwnershipCall__Inputs {
  _call: ClaimOwnershipCall;

  constructor(call: ClaimOwnershipCall) {
    this._call = call;
  }
}

export class ClaimOwnershipCall__Outputs {
  _call: ClaimOwnershipCall;

  constructor(call: ClaimOwnershipCall) {
    this._call = call;
  }
}

export class ClaimTokenOwnershipCall extends EthereumCall {
  get inputs(): ClaimTokenOwnershipCall__Inputs {
    return new ClaimTokenOwnershipCall__Inputs(this);
  }

  get outputs(): ClaimTokenOwnershipCall__Outputs {
    return new ClaimTokenOwnershipCall__Outputs(this);
  }
}

export class ClaimTokenOwnershipCall__Inputs {
  _call: ClaimTokenOwnershipCall;

  constructor(call: ClaimTokenOwnershipCall) {
    this._call = call;
  }
}

export class ClaimTokenOwnershipCall__Outputs {
  _call: ClaimTokenOwnershipCall;

  constructor(call: ClaimTokenOwnershipCall) {
    this._call = call;
  }
}

export class RecoverTokensCall extends EthereumCall {
  get inputs(): RecoverTokensCall__Inputs {
    return new RecoverTokensCall__Inputs(this);
  }

  get outputs(): RecoverTokensCall__Outputs {
    return new RecoverTokensCall__Outputs(this);
  }
}

export class RecoverTokensCall__Inputs {
  _call: RecoverTokensCall;

  constructor(call: RecoverTokensCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RecoverTokensCall__Outputs {
  _call: RecoverTokensCall;

  constructor(call: RecoverTokensCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends EthereumCall {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class ShiftInCall extends EthereumCall {
  get inputs(): ShiftInCall__Inputs {
    return new ShiftInCall__Inputs(this);
  }

  get outputs(): ShiftInCall__Outputs {
    return new ShiftInCall__Outputs(this);
  }
}

export class ShiftInCall__Inputs {
  _call: ShiftInCall;

  constructor(call: ShiftInCall) {
    this._call = call;
  }

  get _pHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _nHash(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _sig(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class ShiftInCall__Outputs {
  _call: ShiftInCall;

  constructor(call: ShiftInCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ShiftOutCall extends EthereumCall {
  get inputs(): ShiftOutCall__Inputs {
    return new ShiftOutCall__Inputs(this);
  }

  get outputs(): ShiftOutCall__Outputs {
    return new ShiftOutCall__Outputs(this);
  }
}

export class ShiftOutCall__Inputs {
  _call: ShiftOutCall;

  constructor(call: ShiftOutCall) {
    this._call = call;
  }

  get _to(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ShiftOutCall__Outputs {
  _call: ShiftOutCall;

  constructor(call: ShiftOutCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class TransferOwnershipCall extends EthereumCall {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class TransferTokenOwnershipCall extends EthereumCall {
  get inputs(): TransferTokenOwnershipCall__Inputs {
    return new TransferTokenOwnershipCall__Inputs(this);
  }

  get outputs(): TransferTokenOwnershipCall__Outputs {
    return new TransferTokenOwnershipCall__Outputs(this);
  }
}

export class TransferTokenOwnershipCall__Inputs {
  _call: TransferTokenOwnershipCall;

  constructor(call: TransferTokenOwnershipCall) {
    this._call = call;
  }

  get _nextTokenOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferTokenOwnershipCall__Outputs {
  _call: TransferTokenOwnershipCall;

  constructor(call: TransferTokenOwnershipCall) {
    this._call = call;
  }
}

export class UpdateFeeRecipientCall extends EthereumCall {
  get inputs(): UpdateFeeRecipientCall__Inputs {
    return new UpdateFeeRecipientCall__Inputs(this);
  }

  get outputs(): UpdateFeeRecipientCall__Outputs {
    return new UpdateFeeRecipientCall__Outputs(this);
  }
}

export class UpdateFeeRecipientCall__Inputs {
  _call: UpdateFeeRecipientCall;

  constructor(call: UpdateFeeRecipientCall) {
    this._call = call;
  }

  get _nextFeeRecipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateFeeRecipientCall__Outputs {
  _call: UpdateFeeRecipientCall;

  constructor(call: UpdateFeeRecipientCall) {
    this._call = call;
  }
}

export class UpdateMinimumShiftOutAmountCall extends EthereumCall {
  get inputs(): UpdateMinimumShiftOutAmountCall__Inputs {
    return new UpdateMinimumShiftOutAmountCall__Inputs(this);
  }

  get outputs(): UpdateMinimumShiftOutAmountCall__Outputs {
    return new UpdateMinimumShiftOutAmountCall__Outputs(this);
  }
}

export class UpdateMinimumShiftOutAmountCall__Inputs {
  _call: UpdateMinimumShiftOutAmountCall;

  constructor(call: UpdateMinimumShiftOutAmountCall) {
    this._call = call;
  }

  get _minShiftOutAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateMinimumShiftOutAmountCall__Outputs {
  _call: UpdateMinimumShiftOutAmountCall;

  constructor(call: UpdateMinimumShiftOutAmountCall) {
    this._call = call;
  }
}

export class UpdateMintAuthorityCall extends EthereumCall {
  get inputs(): UpdateMintAuthorityCall__Inputs {
    return new UpdateMintAuthorityCall__Inputs(this);
  }

  get outputs(): UpdateMintAuthorityCall__Outputs {
    return new UpdateMintAuthorityCall__Outputs(this);
  }
}

export class UpdateMintAuthorityCall__Inputs {
  _call: UpdateMintAuthorityCall;

  constructor(call: UpdateMintAuthorityCall) {
    this._call = call;
  }

  get _nextMintAuthority(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateMintAuthorityCall__Outputs {
  _call: UpdateMintAuthorityCall;

  constructor(call: UpdateMintAuthorityCall) {
    this._call = call;
  }
}

export class UpdateShiftInFeeCall extends EthereumCall {
  get inputs(): UpdateShiftInFeeCall__Inputs {
    return new UpdateShiftInFeeCall__Inputs(this);
  }

  get outputs(): UpdateShiftInFeeCall__Outputs {
    return new UpdateShiftInFeeCall__Outputs(this);
  }
}

export class UpdateShiftInFeeCall__Inputs {
  _call: UpdateShiftInFeeCall;

  constructor(call: UpdateShiftInFeeCall) {
    this._call = call;
  }

  get _nextFee(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class UpdateShiftInFeeCall__Outputs {
  _call: UpdateShiftInFeeCall;

  constructor(call: UpdateShiftInFeeCall) {
    this._call = call;
  }
}

export class UpdateShiftOutFeeCall extends EthereumCall {
  get inputs(): UpdateShiftOutFeeCall__Inputs {
    return new UpdateShiftOutFeeCall__Inputs(this);
  }

  get outputs(): UpdateShiftOutFeeCall__Outputs {
    return new UpdateShiftOutFeeCall__Outputs(this);
  }
}

export class UpdateShiftOutFeeCall__Inputs {
  _call: UpdateShiftOutFeeCall;

  constructor(call: UpdateShiftOutFeeCall) {
    this._call = call;
  }

  get _nextFee(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class UpdateShiftOutFeeCall__Outputs {
  _call: UpdateShiftOutFeeCall;

  constructor(call: UpdateShiftOutFeeCall) {
    this._call = call;
  }
}
